{"version":3,"file":"static/js/942.428625f3.chunk.js","mappings":"gLAKA,MAwBA,EAxBaA,KAETC,EAAAA,EAAAA,KAAA,WAASC,UAAU,eAAcC,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sJAKHF,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,KAAK,SAASC,MAAO,IAAIJ,UAC/BF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACN,UAAU,YAAYO,GAAG,WAAUN,SAAC,0BAK9CF,EAAAA,EAAAA,KAAA,OAAKS,IAAKC,EAAAA,GAAOC,IAAI,e,sBCnB7B,MA4CA,EA5CsBC,IAAe,IAAd,KAAEP,GAAMO,EAC7B,MAAM,KAAEC,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAEtBC,EAAsB,WAAyB,IAAxBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAGH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC3C,OAAQI,KAAKC,UAAYF,EAAMJ,GAAOA,GAAKO,QAAQ,EACrD,EAEA,IAAKX,GAAwB,IAAhBA,EAAKM,OAChB,OAAOnB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uCAGZ,MAAMuB,EAAeZ,EAAKa,QAAQC,GAASA,EAAKC,SAASC,SAASxB,KAElE,OACEL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAC/BuB,EAAaN,OAAS,EAAIM,EAAeZ,GACxCiB,MAAM,EAAG,IACTC,KAAKJ,IACJxB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OACES,IAAKkB,EAAKK,MACVC,OAAQ,IACR3B,MAAO,IACPK,IAAKgB,EAAKO,MAAQ,UAEpB/B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKyB,EAAKO,QACV/B,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,IAAEyB,EAAKQ,OAASnB,QACnBb,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACGyB,EAAKS,QAAQ,IAAET,EAAKC,SAASS,KAAK,OAAO,aAAW,IACpDV,EAAKW,YAAYR,MAAM,EAAG,GAAGO,KAAK,MAAM,YAG3ClC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sBACNF,EAAAA,EAAAA,KAACuC,EAAAA,IAAgB,YAjBiBZ,EAAKO,SAsB7C,ECLV,EAnCiBM,KACf,MAEOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAiBjD,OACExC,EAAAA,EAAAA,MAAA,WAASF,UAAU,mBAAmB2C,GAAG,OAAM1C,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAtBb,CAAC,QAAS,QAAS,WAAY,cAuBhC6B,KAAKc,IACd7C,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAAYC,KAAK,QAAQyC,QAASA,IArB7BD,KAClB,OAAQA,GACN,IAAK,QACHH,EAAgB,UAChB,MACF,IAAK,WACHA,EAAgB,WAChB,MACF,IAAK,aACHA,EAAgB,YAChB,MACF,QACEA,EAAgBG,GACpB,EAQqDE,CAAWF,GAAM3C,SAC7D2C,GADUA,QAKjB7C,EAAAA,EAAAA,KAACgD,EAAa,CAAC3C,KAAMoC,MACb,E,aC/Bd,MAkFA,EAlFgBQ,KACd,MAAOC,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,CAAC,IAC1C,KAAE9B,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,IAE5BqC,EAAAA,EAAAA,YAAU,KAcRvC,EAAKwC,SAASC,IACRA,EAAOC,SAAWL,EAAYI,EAAOC,SAdlBC,WACvB,IACE,MAAMC,QAAiBC,MAAM,+BAA+BH,KAC5D,IAAKE,EAASE,GACZ,MAAM,IAAIC,MAAM,iCAAiCL,KAEnD,MAAMM,QAAeJ,EAASK,OAC9BX,GAAgBY,IAAW,IAAWA,EAAa,CAACR,GAASM,KAC/D,CAAE,MAAOG,GACPC,QAAQD,MAAMA,EAChB,GAKEE,CAAiBZ,EAAOC,OAC1B,GACA,GACD,CAAC1C,EAAMqC,IAEV,MAIMiB,EAAeC,IACnB,MAAMC,EALeD,IACd9C,KAAKgD,MAAMF,GAIIG,CAAcH,GACpC,IAAII,EAAQ,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAClBA,GAAKJ,EACPG,EAAME,MAAK1E,EAAAA,EAAAA,KAAC2E,EAAAA,IAAM,CAASC,MAAO,CAAEC,MAAO,YAAnBJ,IAExBD,EAAME,MAAK1E,EAAAA,EAAAA,KAAC2E,EAAAA,IAAM,CAASC,MAAO,CAAEC,MAAO,YAAnBJ,IAI5B,OAAOD,CAAK,EAGd,OACErE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAiB2C,GAAG,UAAS1C,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAC1BW,EAAKM,OAAS,EACbN,EAAKkB,KAAI,CAACuB,EAAQwB,KAChB,MAAMC,EAAe7B,EAAYI,EAAOC,SAAW,CAAC,EAEpD,OACEpD,EAAAA,EAAAA,MAAA,OAAiBF,UAAU,cAAaC,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SACG6E,EACG,GAAGA,EAAaC,aAAaD,EAAaE,WAC1C,iBACA,KACNjF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAC/BiE,EAAYb,EAAOc,WAEtBpE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASC,SAAEoD,EAAOpB,WAEjClC,EAAAA,EAAAA,KAAA,OACES,IAAKsE,EAAa/C,MAClB1B,MAAO,GACP2B,OAAQ,GACRtB,IAAI,kBAhBEmE,EAkBJ,KAIV9E,EAAAA,EAAAA,KAAA,KAAAE,SAAG,wBAGH,ECrDV,EA1BgBgF,KAEZ/E,EAAAA,EAAAA,MAAA,WAASF,UAAU,kBAAkB2C,GAAG,UAAS1C,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,wmBAYLC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKS,IAAK0E,EAAAA,GAAYxE,IAAI,aAAasB,OAAQ,IAAK3B,MAAO,OAC3DN,EAAAA,EAAAA,KAAA,OAAKS,IAAK2E,EAAAA,GAAOzE,IAAI,QAAQsB,OAAQ,IAAK3B,MAAO,YCNzD,EAXiB+E,KAEblF,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAApF,SAAA,EACEF,EAAAA,EAAAA,KAACD,EAAI,KACLC,EAAAA,EAAAA,KAACwC,EAAQ,KACTxC,EAAAA,EAAAA,KAACiD,EAAO,KACRjD,EAAAA,EAAAA,KAACkF,EAAO,M","sources":["components/Hero.js","components/SpecialsMeals.js","components/Specials.js","components/Reviews.js","components/History.js","pages/Homepage.js"],"sourcesContent":["import React from \"react\";\nimport Button from \"./ui/Button\";\nimport { foods } from \"../constants/assets\";\nimport { Link } from \"react-router-dom\";\n\nconst Hero = () => {\n  return (\n    <section className=\"hero-section\">\n      <div className=\"flex\">\n        <div>\n          <h1>Little Lemon</h1>\n          <h1>Chicago</h1>\n          <p>\n            Experience the zesty flavors of Little Lemon with fresh,\n            lemon-inspired dishes and local ingredients, all served in a warm,\n            inviting atmosphere!\n          </p>\n          <Button type=\"yellow\" width={200}>\n            <Link className=\"list-none\" to=\"/booking\">\n              Reserve a Table\n            </Link>\n          </Button>\n        </div>\n        <img src={foods} alt=\"foods\" />\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { MdDeliveryDining } from \"react-icons/md\";\n\nconst SpecialsMeals = ({ type }) => {\n  const { menu } = useContext(DataContext);\n\n  const generateRandomPrice = (min = 10, max = 20) => {\n    return (Math.random() * (max - min) + min).toFixed(2);\n  };\n\n  if (!menu || menu.length === 0) {\n    return <p>No dishes available at the moment.</p>;\n  }\n\n  const filteredData = menu.filter((dish) => dish.mealType.includes(type));\n\n  return (\n    <div className=\"specials-container\">\n      {(filteredData.length > 0 ? filteredData : menu)\n        .slice(0, 10)\n        .map((dish) => (\n          <div className=\"specials-section \" key={dish.name}>\n            <img\n              src={dish.image}\n              height={100}\n              width={100}\n              alt={dish.name || \"food\"}\n            />\n            <div className=\"specials-info\">\n              <h4>{dish.name}</h4>\n              <p>${dish.price || generateRandomPrice()}</p>\n              <p>\n                {dish.cuisine} {dish.mealType.join(\" / \")} made with{\" \"}\n                {dish.ingredients.slice(0, 4).join(\", \")} &nbsp;\n              </p>\n\n              <div className=\"specials-delivery\">\n                <span>Order a delivery</span>\n                <MdDeliveryDining />\n              </div>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default SpecialsMeals;\n","import React, { useState } from \"react\";\nimport Button from \"./ui/Button\";\nimport SpecialsMeals from \"./SpecialsMeals\";\n\nconst Specials = () => {\n  const orderType = [\"Lunch\", \"Mains\", \"Desserts\", \"A la Carte\"];\n\n  const [selectedType, setSelectedType] = useState(\"\");\n  const selectType = (item) => {\n    switch (item) {\n      case \"Mains\":\n        setSelectedType(\"Dinner\");\n        break;\n      case \"Desserts\":\n        setSelectedType(\"Dessert\");\n        break;\n      case \"A la Carte\":\n        setSelectedType(\"Beverage\");\n        break;\n      default:\n        setSelectedType(item);\n    }\n  };\n\n  return (\n    <section className=\"pad-20 specials \" id=\"menu\">\n      <h3>ORDER FOR DELIVERY!</h3>\n      <div className=\"py-20 flex\">\n        {orderType.map((item) => (\n          <Button key={item} type=\"white\" onClick={() => selectType(item)}>\n            {item}\n          </Button>\n        ))}\n      </div>\n      <SpecialsMeals type={selectedType} />\n    </section>\n  );\n};\n\nexport default Specials;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { FaStar } from \"react-icons/fa\";\n\nconst Reviews = () => {\n  const [userDetails, setUserDetails] = useState({});\n  const { menu } = useContext(DataContext);\n\n  useEffect(() => {\n    const fetchUserDetails = async (userId) => {\n      try {\n        const response = await fetch(`https://dummyjson.com/users/${userId}`);\n        if (!response.ok) {\n          throw new Error(`Unable to fetch data for user ${userId}`);\n        }\n        const result = await response.json();\n        setUserDetails((prevDetails) => ({ ...prevDetails, [userId]: result }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    menu.forEach((review) => {\n      if (review.userId && !userDetails[review.userId]) {\n        fetchUserDetails(review.userId);\n      }\n    });\n  }, [menu, userDetails]);\n\n  const getStarRating = (rating) => {\n    return Math.round(rating);\n  };\n\n  const renderStars = (rating) => {\n    const roundedRating = getStarRating(rating);\n    let stars = [];\n\n    for (let i = 1; i <= 5; i++) {\n      if (i <= roundedRating) {\n        stars.push(<FaStar key={i} style={{ color: \"#f5c518\" }} />);\n      } else {\n        stars.push(<FaStar key={i} style={{ color: \"#e0e0e0\" }} />);\n      }\n    }\n\n    return stars;\n  };\n\n  return (\n    <div className=\"review-section\" id=\"reviews\">\n      <h2>Customer Reviews</h2>\n      <div className=\"reviews-list\">\n        {menu.length > 0 ? (\n          menu.map((review, index) => {\n            const customerData = userDetails[review.userId] || {};\n\n            return (\n              <div key={index} className=\"flex review\">\n                <div className=\"review-text\">\n                  <h4>\n                    {customerData\n                      ? `${customerData.firstName} ${customerData.lastName}`\n                      : \"Unknown User\"}\n                  </h4>{\" \"}\n                  <div className=\"rating center-all\">\n                    {renderStars(review.rating)}\n                  </div>\n                  <p className=\"comment\">{review.name}</p>\n                </div>\n                <img\n                  src={customerData.image}\n                  width={80}\n                  height={80}\n                  alt=\"profile pic\"\n                />\n              </div>\n            );\n          })\n        ) : (\n          <p>No reviews yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import React from \"react\";\nimport { restaurant, mario } from \"../constants/assets\";\n\nconst History = () => {\n  return (\n    <section className=\"history-section\" id=\"history\">\n      <div className=\"hist-text\">\n        <h1>Little Lemon</h1>\n        <h1>Chicago</h1>\n        <p>\n          Nestled in the heart of Chicago, Little Lemon Chicago started as a\n          popular food truck in 2010, thanks to Mario and Alex, two childhood\n          friends from Greece. Their dream was to share Mediterranean-inspired\n          dishes with a local twist. After the truck’s success, they opened a\n          cozy restaurant in 2015, adorned with lemon-themed décor to honor\n          their roots. Known for its zesty lemon chicken and vibrant atmosphere,\n          Little Lemon quickly became a neighborhood favorite. Today, it\n          continues to delight diners with its fresh flavors and warm, inviting\n          ambiance, reflecting a blend of tradition and innovation.\n        </p>\n      </div>\n      <div className=\"history-img\">\n        <img src={restaurant} alt=\"restaurant\" height={200} width={200} />\n        <img src={mario} alt=\"mario\" height={200} width={250} />\n      </div>\n    </section>\n  );\n};\n\nexport default History;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Specials from \"../components/Specials\";\nimport Reviews from \"../components/Reviews\";\nimport History from \"../components/History\";\n\nconst Homepage = () => {\n  return (\n    <>\n      <Hero />\n      <Specials />\n      <Reviews />\n      <History />\n    </>\n  );\n};\n\nexport default Homepage;\n"],"names":["Hero","_jsx","className","children","_jsxs","Button","type","width","Link","to","src","foods","alt","_ref","menu","useContext","DataContext","generateRandomPrice","min","arguments","length","undefined","max","Math","random","toFixed","filteredData","filter","dish","mealType","includes","slice","map","image","height","name","price","cuisine","join","ingredients","MdDeliveryDining","Specials","selectedType","setSelectedType","useState","id","item","onClick","selectType","SpecialsMeals","Reviews","userDetails","setUserDetails","useEffect","forEach","review","userId","async","response","fetch","ok","Error","result","json","prevDetails","error","console","fetchUserDetails","renderStars","rating","roundedRating","round","getStarRating","stars","i","push","FaStar","style","color","index","customerData","firstName","lastName","History","restaurant","mario","Homepage","_Fragment"],"sourceRoot":""}